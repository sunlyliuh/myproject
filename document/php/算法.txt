选择排序
通俗的解释

对比数组中前一个元素跟后一个元素的大小，如果后面的元素比前面的元素小则用一个变量k来记住他的位置，接着第二次比较，前面“后一个元素”现变成了“前一个元素”，
继续跟他的“后一个元素”进行比较如果后面的元素比他要小则用变量k记住它在数组中的位置(下标)，等到循环结束的时候，我们应该找到了最小的那个数的下标了，
然后进行判断，如果这个元素的下标不是第一个元素的下标，就让第一个元素跟他交换一下值，这样就找到整个数组中最小的数了。然后找到数组中第二小的数，
让他跟数组中第二个元素交换一下值，以此类推。

functionselection_sort($array){
    $count=count($array);
    for($i=0;$i<$count-1;$i++){
        /*findtheminest*/
        $min=$i;
        echo'$min-->'.$array[$min].'-->';
        for($j=$i+1;$j<$count;$j++){
            //由小到大排列
            if($array[$min]>$array[$j]){
                //表明当前最小的还比当前的元素大
                $min=$j;
                //赋值新的最小的
            }
        }
        echo$array[$min].'coco<br/>';
        /*swap$array[$i]and$array[$min]即将当前内循环的最小元素放在$i位置上*/
        if($min!=$i){
            $temp=$array[$min];
            $array[$min]=$array[$i];
            $array[$i]=$temp;
        }
    }
    return$array;
}
$old_array=array(3,4,5,6,8,2,12);
$new_array=selection_sort($old_array);

冒泡排序 

$arr = array('1','2','3','4','5','6','7');
function maopao($arr){
    $len = count($arr);
    if($len <=1){
        return $arr;
    }
    $flag = false;
    for($i=1;$i<$len; $i++){
        
        for($j=$len-1; $j>=$i; $j--){
            if($arr[$j] < $arr[$j-1]){
                $temp = $arr[$j-1];
                $arr[$j-1] = $arr[$j];
                $arr[$j] = $temp;
                $flag=true;
                print_r($arr);echo '<br>';
            }
        }
        
        if (!$flag){
          break;
       }
       $flag = false;
    }
    
    return $arr;
}

$newArr = maopao($arr);


快速排序
function kuaisu($arr){
    $len = count($arr);
    if($len <= 1){
        return $arr;
    }
    
    $value = $arr[0];
    $leftArr = $rightArr = array();
    for($i=1; $i<$len;$i++){
        if($arr[$i] < $value){
            $leftArr[] = $arr[$i];
        }else{
            $rightArr[] = $arr[$i];
        }
    }
    $leftArr = kuaisu($leftArr);
    $rightArr = kuaisu($rightArr);
    
    return array_merge($leftArr,array($value), $rightArr);
}
