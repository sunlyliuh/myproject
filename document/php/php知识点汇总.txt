php方面
1.数据算法
  冒泡排序，快速排序
2.程序优化方面
   使用unset删除打的变量，在循环之前先计算总数
3.主流框架的优缺点
4.php新版本的特性
5.php的扩展
6.网站安全
    xss（转义特殊html字符< >）
    sql注入（sql预绑定,转义）
    csrf（加token方式，或则添加验证码）
    通信安全及数据篡改（数据签名方式，具体的算法需要了解）
7.php的设计模式
  单例，工厂，观察者
8.其他注意事项
   php内global与&global的区别
   static的使用
   php的垃圾收集机制是怎么实现的  http://www.cnblogs.com/hulan/archive/2012/10/18/2729076.html
9.搜索引擎接触过哪几种，他们的运行机制是什么
  搜索引擎里面的内部机制（增量索引，删除索引，更新索引）
   lucense,sphinx,solr

mysql方面
1.mysql的优化
    存储引擎（myisam,innodb,memory存储引擎）
         myisam特点：读取数据快，表级锁
         innodb特点：支持事物，支持行级锁可以承受高并发（很多人以为Innodb是行级锁，那个只是where对它主键是有效，非主键的都会锁全表的。）
         memory特点：所有数据都存放在内存中，不会将任何数据存放到磁盘上，在磁盘上仅仅存放了表结构相关信息的.frm文件，实现页级锁定
    建表结构
        a.使用最合适的字段类型，能用小的字节类型尽量用小的，例如能存放状态的字段，不要用int可以用tinyint,能用varchar的不用text
        b.尽可能的将字段设置为not null
        c.添加索引
        扩展int(3)与int(11)的区别，datetime与timestamp的区别
    sql优化
        a.当只需要查询一条时使用limit1
        b.千万不要使用order by rand()来获取随机的行
        c.避免select * 操作，只查询自己需要的字段
        d.尽可能在索引中完成排序
        e.永远用小的结果集驱动大的结果集
        f.尽可能避免复杂的join和子查询
        g.从explain入手
        h.多使用profile
    索引优化
        a.为较频繁的作为查询条件的字段建立索引
        b.唯一性太差的字段不适合单独创建索引，比如状态字段，类型字段
        c.blog和text类型的列只能创建前缀索引
        d.使用!=和not in 的使用，mysql无法使用索引
        e.过滤字段使用了函数运算，如abs(column）,mysql无法使用索引
        f.join语句中join条件字段类型不一致的时候，mysql无法索引
        g.使用like的时候，如果条件通配符以%开头，mysql无法使用索引
        扩展索引的种类（主键索引，普通索引，唯一索引，联合索引，全文索引）
        联合索引比如创建的索引是（a,b,c），只有在查询的时候a,ab,ac,abc这三种时候才会用到索引，where 后面的查询字段顺序不影响，可以是cab,cba，bca等，关键是必须要有a这个查询字段。

    
2.mysql的主从机制及配置
    主从机制binglog原理分析
    复制有3个步骤：   
       (1)    master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；
       (2)    slave将master的binary log events拷贝到它的中继日志(relay log)；
       (3)    slave重做中继日志中的事件，将改变反映它自己的数据。
    如何进行主从配置
3.mysql分库分表
    常规的取%分表（根据用户id的最后一位对某个特定的值取余数）
    不常规的用户和商铺看到的订单分库分表设计(都从搜索引擎里面获取数据)

linux方面
1.基本命令
    tar ps w top du df find grep 
2.shell脚本
    mysql监控及报警
    php进程监控及报警
    磁盘容量报警
    重要文件的备份
    
3.svn的配置及权限管理

nginx
1.nginx与php运行的机制  http://www.server110.com/nginx/201402/6543.html
    fastcgi原理分析 通过fast-cgi来运行
2.nginx的负载均衡
    upstream的配置
3.nginx的扩展

缓存方面（memcache、redis）
1.memcache与redis的使用场景
2.memcache与redis的区别
3.redis里面保存在硬盘的时候有哪几种方式  aof, rdb，具体的实现机制是什么 http://www.cnblogs.com/scott19820130/p/4915878.html
4.使用memcache的时候，发现占用的空间达到70%左右就开始删除数据，使用memcache存储原理来解释这一现象

服务器架构方面
1.高并发高访问量的情况的处理方式
2.千万级网站的架构设计，亿万级网站的架构设计
3.网站访问慢，如何定位问题，是程序慢还是服务器的cpu，硬盘，还是mysql慢
    首先检查网络是否慢，如果不是网络慢的话再继续看系统的负载情况，如果负载也不大的话，继续跟踪服务器cpu,磁盘，交换空间的情况，定位到具体是哪个进程出现的问题，
如果是程序的问题，就需要考虑优化程序，如果是其他的服务出现问题，可以跟踪该服务的日志。


网站访问慢都有哪些解决方法
1.服务器方面
负载均衡，mysql主从
2.数据库方面
慢查询、创建索引
3.客户端缓存
js压缩，小图片都合并到一张